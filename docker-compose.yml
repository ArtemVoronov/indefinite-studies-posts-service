version: "3.9"
services:
  #TODO: add pgbouncer or pgcat and several instances of postgres
  postgres_shard_1:
      image: postgres
      environment:
        POSTGRES_USER: "${DATABASE_USER_SHARD_1}"
        POSTGRES_PASSWORD: "${DATABASE_PASSWORD_SHARD_1}"
        POSTGRES_DB: "${DATABASE_NAME_SHARD_1}"
      volumes:
        - database-volume:/var/lib/postgresql/data_shard_1

  postgres_shard_2:
      image: postgres
      environment:
        POSTGRES_USER: "${DATABASE_USER_SHARD_2}"
        POSTGRES_PASSWORD: "${DATABASE_PASSWORD_SHARD_2}"
        POSTGRES_DB: "${DATABASE_NAME_SHARD_2}"
      volumes:
        - database-volume:/var/lib/postgresql/data_shard_2
    
  api:
    build: .
    deploy:
      mode: replicated
      replicas: 2
    ports:
      - "3009-3010:3005"
      - "50055-50056:50051"
    depends_on:
      - liquibase_shard_1
      - liquibase_shard_2
  
  liquibase_shard_1:
    image: liquibase/liquibase
    volumes:
      - ./docker/liquibase/migrations:/liquibase/changelog
    command: [
        "liquibase",
        "--username=${DATABASE_USER_SHARD_1}",
        "--password=${DATABASE_PASSWORD_SHARD_1}",
        "--changeLogFile=changelog/db.changelog-root.xml",
        "--url=${DATABASE_URL_SHARD_1}",
        "update"
    ]
    depends_on:
      - postgres_shard_1
  
  liquibase_shard_2:
    image: liquibase/liquibase
    volumes:
      - ./docker/liquibase/migrations:/liquibase/changelog
    command: [
        "liquibase",
        "--username=${DATABASE_USER_SHARD_2}",
        "--password=${DATABASE_PASSWORD_SHARD_2}",
        "--changeLogFile=changelog/db.changelog-root.xml",
        "--url=${DATABASE_URL_SHARD_2}",
        "update"
    ]
    depends_on:
      - postgres_shard_2
  
  nginx:
    image: nginx
    volumes:
    - ./configs/templates/nginx:/etc/nginx/templates
    ports:
    - "10004:80"
    environment:
    - HOST_API=${HOST_API}
    depends_on:
      - api

  nginxGRPC:
    image: nginx
    volumes:
      - ./configs/templates/nginxGRPC:/etc/nginx/templates
      - ./configs/tls:/etc/nginx/certs
    ports:
      - "10005:1443"
    environment:
      - HOST_API=${HOST_API}
    depends_on:
      - api

volumes:
  database-volume:
networks:
  default:
    name: indefinite-studies-posts-service-network